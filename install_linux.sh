#!/bin/bash
# Script de instalaci√≥n autom√°tica para Linux
# Generador de Cuadros M√°gicos con algoritmo de Kurosaka

set -e  # Salir en caso de error

# Colores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

# Banner
echo -e "${PURPLE}"
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë               GENERADOR DE CUADROS M√ÅGICOS                  ‚ïë"
echo "‚ïë                 Instalador para Linux                       ‚ïë"
echo "‚ïë                                                              ‚ïë"
echo "‚ïë  Incluye el algoritmo de Robert T. Kurosaka                 ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"

# Detectar distribuci√≥n
detect_distro() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        DISTRO=$ID
        VERSION=$VERSION_ID
    elif command -v lsb_release >/dev/null 2>&1; then
        DISTRO=$(lsb_release -si | tr '[:upper:]' '[:lower:]')
        VERSION=$(lsb_release -sr)
    else
        DISTRO="unknown"
        VERSION="unknown"
    fi
}

# Funci√≥n para instalar dependencias
install_dependencies() {
    echo -e "${BLUE}üì¶ Instalando dependencias para $DISTRO...${NC}"
    
    case $DISTRO in
        ubuntu|debian)
            echo "üîÑ Actualizando paquetes..."
            sudo apt update
            echo "üì• Instalando build-essential, pkg-config y GTK+3..."
            sudo apt install -y build-essential pkg-config libgtk-3-dev
            ;;
        fedora|rhel|centos)
            echo "üì• Instalando gcc, pkgconf-devel y gtk3-devel..."
            if command -v dnf >/dev/null 2>&1; then
                sudo dnf install -y gcc pkgconf-devel gtk3-devel
            else
                sudo yum install -y gcc pkgconf-devel gtk3-devel
            fi
            ;;
        arch|manjaro)
            echo "üì• Instalando base-devel, pkgconf y gtk3..."
            sudo pacman -S --needed --noconfirm base-devel pkgconf gtk3
            ;;
        opensuse*|sled|sles)
            echo "üì• Instalando gcc, pkg-config y gtk3-devel..."
            sudo zypper install -y gcc pkg-config gtk3-devel
            ;;
        alpine)
            echo "üì• Instalando gcc, musl-dev, pkg-config y gtk+3.0-dev..."
            sudo apk add gcc musl-dev pkgconfig gtk+3.0-dev
            ;;
        *)
            echo -e "${YELLOW}‚ö†Ô∏è  Distribuci√≥n no reconocida: $DISTRO${NC}"
            echo "Instale manualmente:"
            echo "- gcc (compilador C)"
            echo "- pkg-config"
            echo "- gtk+3 development headers"
            return 1
            ;;
    esac
}

# Verificar instalaci√≥n
verify_installation() {
    echo -e "${BLUE}üîç Verificando instalaci√≥n...${NC}"
    
    # Verificar gcc
    if command -v gcc >/dev/null 2>&1; then
        echo -e "${GREEN}‚úì gcc encontrado: $(gcc --version | head -n1)${NC}"
    else
        echo -e "${RED}‚úó gcc no encontrado${NC}"
        return 1
    fi
    
    # Verificar pkg-config
    if command -v pkg-config >/dev/null 2>&1; then
        echo -e "${GREEN}‚úì pkg-config encontrado${NC}"
    else
        echo -e "${RED}‚úó pkg-config no encontrado${NC}"
        return 1
    fi
    
    # Verificar GTK
    if pkg-config --exists gtk+-3.0; then
        GTK_VERSION=$(pkg-config --modversion gtk+-3.0)
        echo -e "${GREEN}‚úì GTK+3 encontrado: versi√≥n $GTK_VERSION${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  GTK+3 no encontrado (solo funcionar√° versi√≥n consola)${NC}"
    fi
}

# Compilar proyecto
compile_project() {
    echo -e "${BLUE}üî® Compilando proyecto...${NC}"
    
    # Compilar versi√≥n consola
    echo "üìù Compilando versi√≥n de consola..."
    if gcc -Wall -Wextra -std=c99 compile_simple.c -o cuadros_magicos_console; then
        echo -e "${GREEN}‚úì Versi√≥n consola compilada${NC}"
    else
        echo -e "${RED}‚úó Error compilando versi√≥n consola${NC}"
        return 1
    fi
    
    # Compilar versi√≥n GTK si est√° disponible
    if pkg-config --exists gtk+-3.0; then
        echo "üñºÔ∏è  Compilando versi√≥n GTK..."
        if gcc -Wall -Wextra -std=c99 \
            $(pkg-config --cflags gtk+-3.0) \
            main_gtk_simple.c \
            -o cuadros_magicos_gtk \
            $(pkg-config --libs gtk+-3.0); then
            echo -e "${GREEN}‚úì Versi√≥n GTK compilada${NC}"
            GTK_COMPILED=true
        else
            echo -e "${YELLOW}‚ö†Ô∏è  Error compilando versi√≥n GTK${NC}"
            GTK_COMPILED=false
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è  GTK no disponible, solo versi√≥n consola${NC}"
        GTK_COMPILED=false
    fi
}

# Crear scripts de ejecuci√≥n
create_launch_scripts() {
    echo -e "${BLUE}üìù Creando scripts de ejecuci√≥n...${NC}"
    
    # Script para versi√≥n consola
    cat > run_console.sh << 'EOF'
#!/bin/bash
echo "=== Generador de Cuadros M√°gicos - Consola ==="
echo "Algoritmo de Robert T. Kurosaka implementado"
echo ""
./cuadros_magicos_console
EOF
    chmod +x run_console.sh
    
    # Script para versi√≥n GTK (si existe)
    if [ "$GTK_COMPILED" = true ]; then
        cat > run_gtk.sh << 'EOF'
#!/bin/bash
echo "=== Generador de Cuadros M√°gicos - GTK ==="
echo "Iniciando interfaz gr√°fica..."
echo ""
./cuadros_magicos_gtk
EOF
        chmod +x run_gtk.sh
    fi
    
    echo -e "${GREEN}‚úì Scripts creados${NC}"
}

# Mostrar instrucciones finales
show_final_instructions() {
    echo ""
    echo -e "${GREEN}üéâ ¬°Instalaci√≥n completada exitosamente!${NC}"
    echo ""
    echo -e "${BLUE}üìã Archivos generados:${NC}"
    echo "‚Ä¢ cuadros_magicos_console  - Versi√≥n de consola"
    if [ "$GTK_COMPILED" = true ]; then
        echo "‚Ä¢ cuadros_magicos_gtk      - Versi√≥n gr√°fica GTK"
    fi
    echo "‚Ä¢ run_console.sh           - Script para ejecutar consola"
    if [ "$GTK_COMPILED" = true ]; then
        echo "‚Ä¢ run_gtk.sh               - Script para ejecutar GTK"
    fi
    echo ""
    echo -e "${BLUE}üöÄ Para ejecutar:${NC}"
    echo "‚Ä¢ Versi√≥n consola:  ./run_console.sh  o  ./cuadros_magicos_console"
    if [ "$GTK_COMPILED" = true ]; then
        echo "‚Ä¢ Versi√≥n gr√°fica:  ./run_gtk.sh      o  ./cuadros_magicos_gtk"
    fi
    echo ""
    echo -e "${BLUE}üßÆ Algoritmos disponibles:${NC}"
    echo "1. Kurosaka (Noreste) - Algoritmo principal del proyecto"
    echo "2. Siam√©s (Diagonal)"
    echo "3. De la Loub√®re"
    echo "4. M√©todo L"
    echo "5. Alterno"
    echo ""
    echo -e "${BLUE}üìñ Documentaci√≥n adicional:${NC}"
    echo "‚Ä¢ README_LINUX.md - Gu√≠a completa para Linux"
    echo "‚Ä¢ Kurosaka.pdf    - Especificaci√≥n del algoritmo"
    echo ""
    echo -e "${GREEN}¬°Disfrute generando cuadros m√°gicos!${NC}"
}

# Funci√≥n principal
main() {
    echo -e "${BLUE}üîç Detectando sistema...${NC}"
    detect_distro
    echo "Sistema detectado: $DISTRO $VERSION"
    echo ""
    
    # Verificar si ya tiene las dependencias
    if command -v gcc >/dev/null 2>&1 && command -v pkg-config >/dev/null 2>&1; then
        echo -e "${GREEN}‚úì Dependencias b√°sicas ya instaladas${NC}"
        verify_installation
    else
        echo -e "${YELLOW}üì¶ Instalando dependencias...${NC}"
        if ! install_dependencies; then
            echo -e "${RED}‚ùå Error instalando dependencias${NC}"
            exit 1
        fi
        verify_installation
    fi
    
    echo ""
    if ! compile_project; then
        echo -e "${RED}‚ùå Error en la compilaci√≥n${NC}"
        exit 1
    fi
    
    echo ""
    create_launch_scripts
    
    echo ""
    show_final_instructions
}

# Verificar que estamos en el directorio correcto
if [ ! -f "compile_simple.c" ] || [ ! -f "main_gtk_simple.c" ]; then
    echo -e "${RED}‚ùå Error: No se encuentran los archivos fuente${NC}"
    echo "Aseg√∫rese de ejecutar este script desde el directorio del proyecto"
    exit 1
fi

# Ejecutar instalaci√≥n
main
